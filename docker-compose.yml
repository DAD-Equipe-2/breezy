x-env: &global-env
  FRONTEND_ORIGIN: http://localhost:3000


services:
  
  gateway:
    image: nginx:alpine
    restart: always
    container_name: breezy-api-gateway
    ports:
      - "8080:8080"
    volumes:
      - ./backend/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
    depends_on:
      - documentation-service
      - gateway-service
      - auth-service
      - user-service
      - post-service
  
  # -- DOCUMENTATION SERVICE --
  documentation-service:
    build:
      context: ./backend/docs
      dockerfile: Dockerfile
    restart: always
    container_name: breezy-documentation-service
    environment: *global-env
    networks:
      - app-network
  
  # -- GATEWAY SERVICE --
  gateway-service:
    build:
      context: ./backend/gateway
      dockerfile: Dockerfile
    restart: always
    container_name: breezy-gateway-service
    environment: *global-env
    networks:
      - app-network

  # -- AUTH SERVICE --
  auth-service:
    build:
      context: ./backend/auth
      dockerfile: Dockerfile
    restart: always
    container_name: breezy-auth-service
    environment:
      <<: *global-env
      MONGO_URI: mongodb://auth-mongo:27017/auth
    networks:
      - app-network
    depends_on:
      - auth-mongo

  auth-mongo:
    image: mongo:latest
    restart: always
    container_name: breezy-auth-mongo
    volumes:
      - auth-mongo-data:/data/db
    networks:
      - app-network

  # -- USER SERVICE --
  user-service:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
    restart: always
    container_name: breezy-user-service
    environment:
      <<: *global-env
      MONGO_URI: mongodb://user-mongo:27017/user
    networks:
      - app-network
    depends_on:
      - user-mongo

  user-mongo:
    image: mongo:latest
    restart: always
    container_name: breezy-user-mongo
    volumes:
      - user-mongo-data:/data/db
    networks:
      - app-network

  # -- POST SERVICE --
  post-service:
    build:
      context: ./backend/post
      dockerfile: Dockerfile
    restart: always
    container_name: breezy-post-service
    environment:
      <<: *global-env
      MONGO_URI: mongodb://post-mongo:27017/post
    networks:
      - app-network
    depends_on:
      - post-mongo

  post-mongo:
    image: mongo:latest
    restart: always
    container_name: breezy-post-mongo
    volumes:
      - post-mongo-data:/data/db
    networks:
      - app-network
  
  # -- NextJS APP --
  nextjs-app:
    build:
      context: ./frontend/breezy
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_BASE_URL: http://localhost:8080/api/v1
    restart: always
    container_name: breezy-nextjs-app
    ports:
      - "3000:3000"
    depends_on:
      - gateway
    # networks:
    #   - app-network


volumes:
  auth-mongo-data:
  user-mongo-data:
  post-mongo-data:

networks:
  app-network:
    driver: bridge