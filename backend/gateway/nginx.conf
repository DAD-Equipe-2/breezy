events {
    worker_connections 1024;
}

http {
    server {
        listen 8080;
        server_name localhost;

        root /usr/share/nginx/html;


        # --- AUTH SERVICE ---
        location /api/v1/auth/ {
            proxy_pass http://auth-service:3000/;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # --- INTERNAL VERIFICATION endpoint (not directly accessible) ---
        location = /verify {
            # Handle CORS preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }

            internal;  # Prevents direct access from outside

            proxy_pass_request_body off;                    # Do not forward body
            proxy_set_header Content-Length "";             # Clear Content-Length header
            proxy_set_header X-Original-URI $request_uri;   # Original request URI

            # Forward the Authorization header (e.g. JWT token)
            proxy_set_header Authorization $http_authorization;

            # Pass the request to the auth service
            proxy_pass http://auth-service:3000/verify;
        }

        # --- USER SERVICE ---
        location /api/v1/user/ {
            proxy_pass http://user-service:3000/;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # --- PROTECTED routes (require authentication) ---
        # location /private/ {
        #     # Calls the internal /verify endpoint first
        #     auth_request /verify;

        #     # If auth passed (verify returned 2xx), proceed to service
        #     proxy_pass http://private-service:3000/;

        #     # Optionally: forward user info from verify response headers
        #     auth_request_set $user_id $upstream_http_x_user_id;
        #     proxy_set_header X-User-ID $user_id;
        # }
    }
}